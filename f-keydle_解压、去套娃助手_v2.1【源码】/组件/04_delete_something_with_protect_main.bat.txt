@echo off
rem -------------------- encoding:GB 2312(ANSI) ---------------------
rem It is recommended to use "Visual Studio Code" to edit this file.

setlocal enabledelayedexpansion
title 04-删除指定文件【保护所有（可能隐藏的）压缩文件，使之不易被匹配删除】

rem 下面这行看似无意义的命令不是闲着没事写的，是为了防止系统找不到“北”，win10没有这行可能不会有任何问题，
rem 但是一位朋友的win11因为没了这行，配置bandizip版本时找不到当前目录下的bandizip文件在哪，我一开始也
rem 摸不着头脑为什么会找不到bandizip，后来加了这条命令后问题就自己消失了，不得不说这也太玄幻了。
cd /d "%~dp0"

rem 存入当前路径
set origin_path=%~dp0
rem 路径末尾可能会自带“\”，下面去掉它。
set t_m_p=!origin_path:~-1!
if "%t_m_p%"=="\" (set origin_path=!origin_path:~0,-1!)

rem 检查是否传过来了参数（传了参数：mode == 1，拖曳文件的方法；没传参数：mode == 0，手动设置目标的方法）
set /a mode=0

set input=%~1

if defined input (
    rem 由于“mshta vbs...”命令的限制，不能有空格，所以传过来时空格被替换，这里还原回来。
    set target_path=!input:【_空格_】= !

    set /a mode=1
)

if !mode! EQU 1 (goto check) else (goto display_info)


:display_info
echo 功能：删除指定文件的同时保护所有（伪装的，未（成功）解压出来的）压缩文件，使之不易被匹配删除。
echo      此模式下，可以自由地在配置文件中设置下列模式匹配删除指定的（推广）文件，不用担心压缩文件会被删除：
echo    “ 【文件名头部的匹配文字】* ”    ， “ 【文件名头部的匹配文字】*.* ”
echo    “ *【文件名尾部的匹配文字】.* ”  ， “ *.【指定扩展名】 ” 。
echo.
echo      除非故意输入用来保护压缩文件的保护标记，或者直接匹配“ * ”或“ *.* ”，理论上不会匹配到
echo      上述的压缩文件，因此对伪装的压缩文件有保护作用。
echo.
echo.
echo.
goto receive



:receive
echo 请将需要处理的文件夹拖入窗口（接收文件夹的地址），之后按回车。
echo 如果需要退出，确保看到此消息后直接按回车或者关闭窗口，不要拖入文件夹或输入任何内容。
set input=<nul
set /p input=
if not defined input (exit)

rem 统一去掉可能存在的两侧的双引号
set target_path=%input:"=%
rem 路径末尾可能会自带“\”，下面去掉它。
set t_m_p=!target_path:~-1!
if "%t_m_p%"=="\" (set target_path=!target_path:~0,-1!)
goto check



:check
cls
echo 正在处理中，请耐心等待……

rem 这里可以省略权限操作

if exist "!target_path!" (
    goto process
) else (
    rem 发送路径不存在的提醒
    cls
    cd /d "%origin_path%"
    start "title" _通知_.exe 1
    if !mode! EQU 1 (exit) else (goto receive)
)


:process
rem 尝试cd操作目标路径，操作失败的就是文件
cd /d "%target_path%" 2>nul
if !errorlevel! EQU 0 (
    rem 这里可以省略权限操作
    cd ".."
) else (
    rem 发出“需要接受文件夹，而不是文件”的提醒
    cls
    cd /d "%origin_path%"
    start "title" _通知_.exe 5
    if !mode! EQU 1 (exit) else (goto receive)
)


cd /d "%origin_path%\extracter"
rem 转移删除列表
start "【转移删除列表中】" /min /wait extracter.exe 4 "!target_path!"

cd /d "%origin_path%"
if exist "删除列表读取失败.txt" (
    del /f /q "删除列表读取失败.txt" >nul
    goto error_1
) else if exist "删除列表写入失败.txt" (
    del /f /q "删除列表写入失败.txt" >nul
    goto error_2
)


set /a ret=0
if exist "%target_path%\_rm_list_.txt" (

    cd /d "%origin_path%"
    rem 开始往这个文件夹中“塞”文件
    rem 可能是不同盘符，这种情况不能用硬链接。
    if not exist "%target_path%\_child_excuter_4.bat" (copy /y "04_delete_something_with_protect_child.bat" "%target_path%\_child_excuter_4.bat" >nul)


    cd /d "%target_path%"
    rem 启动刚刚复制过来的“子”执行器
    start "｜子执行器｜" /min /wait _child_excuter_4.bat "%origin_path%"
    set /a ret=!errorlevel!

    cd /d "%target_path%"
    rem 执行清理工作，其余文件的删除在子执行器中
    del /f /s /q "_child_excuter_4.bat" >nul

)

cls
cd /d "%origin_path%"
if !ret! EQU 0 (
    rem 发送结束通知
    start "title" _通知_.exe 0
) else if !ret! EQU 2 (
    rem 发送参数“origin_path”传递出错通知
    start "title" _通知_.exe 4
) else (
    rem 发送结束通知
    start "title" _通知_.exe 0
)

if !mode! EQU 1 (exit) else (goto receive)





:error_1
rem echo 读取待删除文件配置时发生错误，请检查“配置解压密码和配置
rem echo 删除指定文件.txt”中的4条线，或者尝试重置配置。
cd /d "%origin_path%"
start "title" _通知_.exe 6
exit

:error_2
rem echo 转移待删除文件列表写入时发生错误，这种错误一般不可能发生。
cd /d "%origin_path%"
start "title" _通知_.exe 7
exit
