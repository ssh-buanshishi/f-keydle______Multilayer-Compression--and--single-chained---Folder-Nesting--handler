@echo off
rem -------------------- encoding:GB 2312(ANSI) ---------------------
rem It is recommended to use "Visual Studio Code" to edit this file.

setlocal enabledelayedexpansion
title 【【清除程序残留文件和恢复被标记文件】】

rem 下面这行看似无意义的命令不是闲着没事写的，是为了防止系统找不到“北”，win10没有这行可能不会有任何问题，
rem 但是一位朋友的win11因为没了这行，配置bandizip版本时找不到当前目录下的bandizip文件在哪，我一开始也
rem 摸不着头脑为什么会找不到bandizip，后来加了这条命令后问题就自己消失了，不得不说这也太玄幻了。
cd /d "%~dp0"

rem 存入当前路径
set origin_path=%~dp0
rem 路径末尾可能会自带“\”，下面去掉它。
set t_m_p=!origin_path:~-1!
if "%t_m_p%"=="\" (set origin_path=!origin_path:~0,-1!)

rem 检查是否传过来了参数（传了参数：mode == 1，拖曳文件的方法；没传参数：mode == 0，手动设置目标的方法）
set /a mode=0

set input=%~1

if defined input (
    rem 由于“mshta vbs...”命令的限制，不能有空格，所以传过来时空格被替换，这里还原回来。
    set target_path=!input:【_空格_】= !

    set /a mode=1
)

if !mode! EQU 1 (goto check) else (goto display_info)


:display_info
echo 功能：解压或进行其他操作时，有时程序会因为各种情况意外退出，
echo      此时目录中就可能会残留有打上标记的文件（“xxx【_解压失败_】”），
echo      或者残留有程序自身的文件（“_child_excuter_xxx”、“_password_.txt”），
echo.
echo      【这个程序就是用来清除文件夹下的程序残留文件和恢复被标记文件的。】
echo.
echo.
goto receive


:receive
echo 请将需要处理的【文件夹】拖入窗口（接收文件夹的地址），之后按回车。
echo 如果需要退出，确保看到此消息后直接按回车或关闭窗口，不要拖入文件夹或输入任何内容。
set input=<nul
set /p input=
if not defined input (exit)

rem 统一去掉可能存在的两侧的双引号
set target_path=%input:"=%
rem 路径末尾可能会自带“\”，下面去掉它。
set t_m_p=!target_path:~-1!
if "%t_m_p%"=="\" (set target_path=!target_path:~0,-1!)



:check
cls
echo 正在处理中，请耐心等待……

rem 由于文件夹已经被处理过了，所以忽略权限操作

if exist "%target_path%" (
    goto process
) else (
    rem 发送路径不存在的提醒
    cls
    cd /d "%origin_path%"
    start "title" _通知_.exe 1
    if !mode! EQU 1 (exit) else (goto receive)
)

:process
rem 尝试cd操作目标路径，操作失败的就是文件
cd /d "%target_path%" 2>nul
if !errorlevel! EQU 0 (
    cd ".."
    rem 这里可以省略权限操作

) else (
    rem 发出“需要接受文件夹，而不是文件”的提醒
    cls
    cd /d "%origin_path%"
    start "title" _通知_.exe 5
    if !mode! EQU 1 (exit) else (goto receive)
)

cd /d "%origin_path%"
rem 开始往这个文件夹中“塞”文件
rem 可能是不同盘符，这种情况不能用硬链接。
if not exist "%target_path%\_child_excuter_recover_0.bat" (copy /y "00_recover_child.bat" "%target_path%\_child_excuter_recover_0.bat" >nul)


cd /d "%target_path%"
rem 启动刚刚复制过来的“子”执行器
start "｜子执行器｜" /min /wait _child_excuter_recover_0.bat "%origin_path%"
set /a ret=!errorlevel!

cd /d "%target_path%"
rem 执行清理工作
del /f /s /q "_child_excuter_recover_0.bat" >nul

cls
cd /d "%origin_path%"
if !ret! EQU 0 (
    rem 发送结束通知
    start "title" _通知_.exe 0
) else if !ret! EQU 2 (
    rem 发送参数“origin_path”传递出错通知
    start "title" _通知_.exe 4
) else (
    rem 发送结束通知
    start "title" _通知_.exe 0
)

if !mode! EQU 1 (exit) else (goto receive)
